/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Actions.JTableToPdf;
import JavaBeans.ConexaoBD;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.URL;
import java.nio.channels.FileChannel;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Danielle
 */
public class Selecionar extends javax.swing.JFrame {

    String imagem;
    String nome;
    boolean confirma = false;

    public Selecionar(JTable tabela, int tela, String titulo, String[] colunas) throws Exception {
        initComponents();
        caminho.setDialogType(JFileChooser.SAVE_DIALOG);
        if (tela == 2) {
            caminho.setCurrentDirectory(new File("backups"));
        }
        if (tela == 1) {
            caminho.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        }
        if (caminho.showSaveDialog(null) == caminho.APPROVE_OPTION) {
            String diretorio = caminho.getSelectedFile().getPath().toString();
            if (tela == 1) {
                JTableToPdf jTableToPdf = new JTableToPdf(titulo, colunas);
                jTableToPdf.runReport(tabela, diretorio, titulo);
                JOptionPane.showMessageDialog(null, "Arquivo PDF criado com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
            } else if (tela == 2) {
                ConexaoBD conexao = new ConexaoBD();
                boolean confirma = conexao.importarBackupSql(diretorio);
                if (confirma == true){
                    if(titulo.equals("importar")){
                        JOptionPane.showMessageDialog(null, "O backup foi importado com sucesso!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "O backup foi importado com sucesso. \nRefa√ßa o login para entrar no sistema!", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            } else if (tela == 3) {
                nome = caminho.getSelectedFile().getName();
                imagem = caminho.getSelectedFile().getPath().toString();
                File file = new File("resources\\fotosProdutos");
                if (!file.exists()) {
                    file.mkdirs();
                }
                FileInputStream origem = new FileInputStream(imagem);;
                FileOutputStream destino = new FileOutputStream("resources\\fotosProdutos\\" + caminho.getSelectedFile().getName());
                FileChannel fcOrigem;
                FileChannel fcDestino;
                fcOrigem = origem.getChannel();
                fcDestino = destino.getChannel();
                fcOrigem.transferTo(0, fcOrigem.size(), fcDestino);
                origem.close();
                destino.close();
            }
        }

    }

    public void fechar() {
        dispose();
    }

    public String pegarCaminho() {
        return imagem;
    }

    public String pegarNome() {
        return nome;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        caminho = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("teste");

        caminho.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        caminho.setApproveButtonToolTipText("");
        caminho.setCurrentDirectory(null);
        caminho.setDialogTitle("");
        caminho.setToolTipText("Selecionar Diretorio");
        caminho.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        caminho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caminhoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 644, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(caminho, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(caminho, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void caminhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caminhoActionPerformed
    }//GEN-LAST:event_caminhoActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser caminho;
    // End of variables declaration//GEN-END:variables
}
